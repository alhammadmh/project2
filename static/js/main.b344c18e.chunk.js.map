{"version":3,"sources":["Expense.js","AddTrans.js","Chart.js","App.js","serviceWorker.js","index.js"],"names":["Expense","_this","this","react_default","a","createElement","DropdownItem","key","props","index","onClick","e","type","click","item","Component","AddTrans","state","trans","onChange","setState","target","value","onSubmit","preventDefault","addTrans","onAddToChart","Form","Input","placeholder","Button","color","Chart","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newLabels","labels","slice","newData","datasets","data","console","log","label","backgroundColor","concat","className","es","height","options","App","objectSpread","selectedSubCat","selectedCat","amount","push","cat","sub","addToChart","chartData","parseInt","addCatName","Restaurant","House","Car","Kids","Travel","Electronics","Loans","Education","Entertainment","Gifts","dropdownOpen","dropdownOpenSub","option","toggle","bind","assertThisInitialized","toggle2","_this2","prevState","_this3","_this4","tempOptions","keys","splice","mainDropDown","map","src_Expense","subDropDown","Container","Row","Col","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","src_AddTrans","xs","md","tran","src_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b344c18e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {DropdownItem } from 'reactstrap';\n\n\nclass Expense extends Component {\n   \n  render() {    \n    // const catList = this.props.state\n \n    // console.log(this.props);\n    \n    return (\n      <div>\n        <DropdownItem key={this.props.index} onClick={(e, type) => this.props.click(this.props.item, this.props.type)}> {this.props.item}  </DropdownItem>        \n      </div>\n    )\n  }\n}\n\n\nexport default Expense","import React, { Component } from 'react'\nimport { Form, Input, Button } from 'reactstrap';\n\nclass AddTrans extends Component {\n\n    state  = {\n        trans : ''\n    }\n\n    onChange = (e)=> \n    this.setState({trans: e.target.value});\n\n    onSubmit = (e)=>{\n    e.preventDefault();\n    this.props.addTrans(this.state.trans);\n    this.props.onAddToChart(this.state.trans)\n    this.setState({ trans: '' })\n    }\n\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit = {this.onSubmit}>\n            <Input\n            type = \"text\" \n            placeholder=\"Enter the amount\"\n            value = {this.state.trans}\n            onChange = {this.onChange}\n            />\n            <Button color=\"success\" >Add</Button>\n        </Form> \n         \n      </div>\n    )\n  }\n}\n\nexport default AddTrans\n","import React, { Component } from 'react'\nimport { Pie, Bar, Line } from 'react-chartjs-2';\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            \n    }\n  }\n  \n  \n  render() {\n\n    const newLabels = this.props.trans.labels.slice()\n    const newData = this.props.trans.datasets[0].data.slice()\n    console.log('test');\n    console.log(newLabels);\n    console.log(newData);\n\n    \n    let data = {\n      labels: newLabels,\n      datasets:[\n        {\n          label: 'Expense',\n          data : newData,\n          backgroundColor: [\n            \n            'green',\n            'gray',\n            'blue',\n            'white',\n            'brown'\n        ]}]\n        }\n        console.log(`chart ${this.props.trans.labels}`);\n        \n    return (\n      <div className = \"chart\">\n        <Pie\n            data={data}\n            height = {200}\n            options={{}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;","import React, { Component } from 'react';\n\nimport {  ButtonDropdown, DropdownToggle, \nDropdownMenu, Container, Row, Col, Button} from 'reactstrap';\n//DropdownItem,Form, Input, Button,\nimport './App.css';\nimport Expense from './Expense'\n// import Income from './Income'\nimport AddTrans from './AddTrans'\nimport Chart from './Chart'\n// import Transections from './Transactions'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      Restaurant:['Dinner', 'Lunch', 'Breakfast','Desert', 'Coffee'],\n      House: ['Grocery', 'Maintenance', 'Furniture', 'Rent', 'Utilities', 'Internet'],\n      Car : ['Gas', 'Wash', 'Oil Change','Ticket', 'Parts', 'Maintenance', 'Insurance'],\n      Kids :['Toys', 'Cloth'],\n      Travel: ['Car Rental', 'Shopping', 'Restaurant', 'Hotel', 'Taxi', 'Coffee', 'Movies', 'Gifts' ],\n      Electronics: ['Laptop', 'Printer'],\n      Loans: ['Fees'],\n      Education:['Books'],\n      Entertainment:['Movies'],\n      Gifts: ['Kids'],\n      dropdownOpen: false,\n      dropdownOpenSub: false,\n      selectedCat: 'Main Category',\n      selectedSubCat: 'SubCategory',\n      option:'house',\n      trans : [],\n      chartData:{\n        labels: [],\n        datasets:[\n          {\n            label: 'Expense',\n            data : [],\n            backgroundColor: [\n              \n              'green',\n              'gray',\n              'blue',\n              'white',\n              'brown'\n            ],\n          }\n        ]\n      }\n    }\n    \n    this.toggle = this.toggle.bind(this);\n    this.toggle2 = this.toggle2.bind(this);\n  }\n\n  toggle() {\n    this.setState((prevState, props) => ({\n      dropdownOpen: !this.state.dropdownOpen\n    })\n    );\n  }\n\n  toggle2() {\n    this.setState((prevState, props) => ({\n      dropdownOpenSub: !this.state.dropdownOpenSub\n    })\n    );\n  }\n  \n  addTrans = (trans)=>{\n    let data = {...this.state}\n    console.log(data);\n    console.log(trans);\n    console.log(data.selectedSubCat !== 'SubCategory')\n    console.log(data.selectedCat !== 'Main Category')\n    console.log(trans !== '')\n    if (data.selectedSubCat !== 'SubCategory' && data.selectedCat !== 'Main Category' && data.trans.amount !== ''){\n    data.trans.push({cat : this.state.selectedCat, sub : this.state.selectedSubCat, amount: trans})\n    console.log(data);\n    this.setState(data) \n\n  }\n\n\n}\n\n  addToChart = (trans) =>{\n    console.log(trans);\n    \n    let data = {...this.state}\n    data.chartData.labels.push(this.state.selectedCat)\n    data.chartData.datasets[0].data.push(parseInt(trans))\n    this.setState(data) \n    console.log('button clecked');\n    console.log(`hello ${data.chartData.labels}`);\n    \n  \n}\n\n  addCatName = (e, type)=>{\n    let data = {...this.state}\n    \n    console.log(e)\n    if(type !== \"sub\"){\n      data.selectedCat = e    \n    }else if(type === 'sub'){\n      data.selectedSubCat = e\n    }\n\n    this.setState(data)\n  }\n\n  \n  render() {\n\n    let tempOptions = []\n \n    for(let keys in this.state){\n      tempOptions.push(keys)\n    }\n\n    tempOptions.splice(10,7)\n\n    const mainDropDown = tempOptions.map((item,index)=>{\n      return <Expense index={index} item={item} key={index} click={this.addCatName}/>\n    })\n    \n\n    let subDropDown = ''\n    if(this.state.selectedCat === 'Main Category'){\n      subDropDown = <Expense index={`1`} item={`Select Main Category`} key={`1`} type=\"sub\" click={this.addCatName} />\n    }else{\n      subDropDown=this.state[this.state.selectedCat].map((item,index)=>{\n        return <Expense index={index} item={item} key={index} type=\"sub\" click={this.addCatName}/>\n      })\n    }\n    \n    \n    \n    return (\n      <div className=\"App\">   \n      <Container>\n\n        <Row className=\"balance\">\n          <Col>Current Balance</Col>\n        </Row>\n\n\n        <Row className=\"header\">\n\n          <Col>Add Transaction </Col>\n\n          <Col>\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                  {this.state.selectedCat}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {mainDropDown}\n                </DropdownMenu>\n            </ButtonDropdown>   \n          </Col>\n          \n\n\n          <Col>\n            <ButtonDropdown isOpen={this.state.dropdownOpenSub} toggle={this.toggle2}>\n                <DropdownToggle caret>\n                {this.state.selectedSubCat}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {subDropDown}\n                </DropdownMenu>\n            </ButtonDropdown>  \n          </Col>\n\n          \n          <Col>\n          <AddTrans addTrans={this.addTrans} onAddToChart={this.addToChart} />\n          </Col>\n          \n          \n\n        </Row>\n        \n\n        <Row className=\"main\">\n\n          <Col xs=\"12\" md=\"8\"> \n\n          <div className=\"trans\" >\n          <h3>Transactions</h3>\n          <h5>\n          {this.state.trans.map((tran,index) => \n          \n            <div key ={index}>\n            {tran.cat} / {tran.sub} : {tran.amount} SR {' '}{' '}\n            <Button> <i className=\"far fa-trash-alt\"></i> </Button>\n            </div>\n            )}\n            </h5>\n            </div>\n          \n          </Col>\n           \n          <Col xs=\"12\" md=\"4\">\n          <h3>Summary</h3>\n          <h5>Income: </h5>\n          <h5>Expense: </h5>\n\n          <div>\n          <Chart  trans={this.state.chartData} />\n          </div>\n\n          \n          </Col>\n         \n        </Row>\n\n\n      </Container> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}